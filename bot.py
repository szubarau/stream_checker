import os
import logging
from datetime import datetime
from telegram import Bot
from telegram.constants import ParseMode
from api import get_stream_status
from stream_status import StreamStatusManager

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler('bot.log'),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger(__name__)


def format_stream_message(streamer, stream_data):
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –Ω–∞—á–∞–ª–µ —Å—Ç—Ä–∏–º–∞"""
    game = stream_data.get('game_name', '–ò–≥—Ä–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞')
    title = stream_data.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')
    viewers = stream_data.get('viewer_count', 0)
    started_at = stream_data.get('started_at', '')

    try:
        start_time = datetime.strptime(started_at, '%Y-%m-%dT%H:%M:%SZ')
        time_str = start_time.strftime('%H:%M UTC')
    except (ValueError, TypeError):
        time_str = '–≤—Ä–µ–º—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'

    return (
        f"üéÆ <b>{streamer} –Ω–∞—á–∞–ª —Å—Ç—Ä–∏–º!</b>\n\n"
        f"üïπÔ∏è –ò–≥—Ä–∞: <b>{game}</b>\n"
        f"üì∫ –ù–∞–∑–≤–∞–Ω–∏–µ: <i>{title}</i>\n"
        f"üëÄ –ó—Ä–∏—Ç–µ–ª–µ–π: <b>{viewers}</b>\n"
        f"‚è± –ù–∞—á–∞–ª–æ: <b>{time_str}</b>\n\n"
        f"üî¥ <a href='https://twitch.tv/{streamer}'>–°–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ Twitch</a>"
    )


def send_telegram_notification(message):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram"""
    try:
        bot = Bot(token=os.getenv("TELEGRAM_BOT_TOKEN"))
        bot.send_message(
            chat_id=os.getenv("TELEGRAM_CHANNEL"),
            text=message,
            parse_mode=ParseMode.HTML,
            disable_web_page_preview=False
        )
        logger.info("–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram: {str(e)}")


def main():
    logger.info("=== –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç—Ä–∏–º–∞ ===")

    streamer = "zumich"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –Ω—É–∂–Ω–æ–≥–æ —Å—Ç—Ä–∏–º–µ—Ä–∞
    status_manager = StreamStatusManager()

    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å—ã
        last_status, _ = status_manager.get_last_status()
        current_stream = get_stream_status(streamer)
        current_status = bool(current_stream)

        logger.info(
            f"–°—Ç–∞—Ç—É—Å —Å—Ç—Ä–∏–º–∞: –±—ã–ª {'online' if last_status else 'offline'}, —Å–µ–π—á–∞—Å {'online' if current_status else 'offline'}")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø—Ä–∏ –Ω–∞—á–∞–ª–µ —Å—Ç—Ä–∏–º–∞
        if current_status and not last_status:
            message = format_stream_message(streamer, current_stream)
            send_telegram_notification(message)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å
        status_manager.save_status(current_status)
        logger.info("–°—Ç–∞—Ç—É—Å —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω")

    except Exception as e:
        logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)}", exc_info=True)
        raise

    logger.info("=== –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ ===")


if __name__ == "__main__":
    main()